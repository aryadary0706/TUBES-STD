#include "DataBuku.h"

int main() {
    ListBuku B;
    ListPenulis P;
    ListRelasi R;

    createListBuku(B);
    createListPenulis(P);
    createListRelasi(R);

    int pilihan;
    do {
        cout << "\n=== Menu Program ===\n";
        cout << "1. Tambah Buku\n";
        cout << "2. Tambah Penulis\n";
        cout << "3. Tambah Relasi Buku-Penulis\n";
        cout << "4. Hapus Penulis\n";
        cout << "5. Hapus Buku\n";
        cout << "6. Tampilkan Penulis (Ascending)\n";
        cout << "7. Tampilkan Penulis (Descending)\n";
        cout << "8. Tampilkan Penulis yang Paling Aktif dan Tidak Aktif\n";
        cout << "9. Menampilkan Seluruh Data Buku dan Penulis\n";
        cout << "10. Menampilkan Buku dari Penulis\n";
        cout << "11. Menampilkan Penulis dari Buku\n";
        cout << "Pilihan Anda: \n";
        cin >> pilihan;

        switch (pilihan) {
            case 1: {
                AddBuku(B);
                break;
            }
            case 2: {
                AddPenulis(P);
                break;
            }
            case 3: {
                string judul, namaPenulis;
                cout << "Masukkan Judul Buku: ";
                cin.ignore();
                getline(cin, judul);
                cout << "Masukkan Nama Penulis: ";
                getline(cin, namaPenulis);
                AddRelasi(R, judul, B, P, namaPenulis);
                cout<<endl;
                break;
            }
            case 4: {
                int IDPenulis;
                cout << "Masukkan ID Penulis yang ingin dihapus: ";
                cin >> IDPenulis;
                HapusPenulis(P, R, IDPenulis);
                break;
            }
            case 5: {
                int IDBuku;
                cout << "Masukkan ID Buku yang ingin dihapus: ";
                cin >> IDBuku;
                HapusBuku(B, R, IDBuku);
                break;
            }
            case 6: {
                TampilkanPenulisSelectionSortAscending(P);
                break;
            }
            case 7: {
                TampilkanPenulisInsertionSortDescending(P);
                break;
            }
            case 8: {
                EvaluasiPenulis(P, R);
                break;
            }
            case 9: {
                PrintBukuDanPenulis(R);
                break;
            }
            case 10: {
                string cache_nama;
                cin>>cache_nama;
                PrintBukuBasedPenulis(R, cache_nama);
                break;
            }
            case 11: {
                string cache_buku;
                cin>>cache_buku;
                PrintPenulisOnBuku(R, cache_buku);
                break;
            }
            case 12: {
                cout<<"Terimakasih sudah menggunakan program ini\n";
            }
            default : {
                cout<<"Pilihan tidak Valid"<<endl;
            }
        }
    } while (pilihan != 10);

    return 0;
}

